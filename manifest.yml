modules:
  function:
    # Main resolver handler
    - key: handler # This key should match the handler export in index.js
      handler: index.handler 
      
    # Function keys used by resolvers (all point to the main handler)
    - key: getPageContext
      handler: index.handler 
    - key: setNewSecret
      handler: index.handler
    - key: getOAuthLoginUrl
      handler: index.handler
    - key: getUserAuthStatus
      handler: index.handler
    - key: getAccessToken
      handler: index.handler
      
    # Dedicated handler for the OAuth callback (in oauth.js)
    - key: oauth-callback-handler
      handler: oauth.oauthCallbackHandler
      
    # --- NEW Worklog Handlers ---
    - key: worklog-create
      handler: worklogCreateHandler.handler
    - key: worklog-update
      handler: worklogUpdateHandler.handler
    - key: worklog-delete
      handler: worklogDeleteHandler.handler
    # --- End NEW Worklog Handlers ---

    # NEW: Functions for Admin Panel
    - key: getAdminPageContext # Fetches OAuth status, Zapier secret, Webhook URLs
      handler: index.handler
    - key: regenerateZapierSecret # Generates and saves a new Zapier secret
      handler: index.handler

  webtrigger:
    # Ensure only one definition for each key
    - key: oauth-callback-trigger
      function: oauth-callback-handler # Points to the function key for the dedicated handler
      # This trigger needs to return dynamic HTML, so it remains dynamic (or default)

    # --- NEW Worklog Web Triggers (STATIC) ---
    - key: worklog-create-trigger
      function: worklog-create
      response:
        type: static
        outputs:
          - key: success-created
            statusCode: 200
            contentType: application/json
            body: '{"success": true, "action": "created"}'
          - key: error-bad-request
            statusCode: 400
            contentType: application/json
            body: '{"success": false, "error": "Bad Request"}'
          - key: error-unauthorized
            statusCode: 401
            contentType: application/json
            body: '{"success": false, "error": "Unauthorized or Re-authentication required"}'
          - key: error-forbidden
            statusCode: 403 # For cases like permission errors from Jira API
            contentType: application/json
            body: '{"success": false, "error": "Forbidden"}'
          - key: error-internal
            statusCode: 500
            contentType: application/json
            body: '{"success": false, "error": "Internal Server Error"}'
          - key: error-jira-api # Generic fallback for other Jira API errors
            statusCode: 502
            contentType: application/json
            body: '{"success": false, "error": "Jira API Error"}'
            
    - key: worklog-update-trigger
      function: worklog-update
      response:
        type: static
        outputs:
          - key: success-updated
            statusCode: 200
            contentType: application/json
            body: '{"success": true, "action": "updated"}'
          - key: error-bad-request # Reuse keys for common errors
            statusCode: 400
            contentType: application/json
            body: '{"success": false, "error": "Bad Request"}'
          - key: error-unauthorized
            statusCode: 401
            contentType: application/json
            body: '{"success": false, "error": "Unauthorized or Re-authentication required"}'
          - key: error-forbidden
            statusCode: 403
            contentType: application/json
            body: '{"success": false, "error": "Forbidden"}'
          - key: error-not-found # Specific for update/delete if worklog ID doesn't exist
            statusCode: 404
            contentType: application/json
            body: '{"success": false, "error": "Worklog Not Found"}'
          - key: error-internal
            statusCode: 500
            contentType: application/json
            body: '{"success": false, "error": "Internal Server Error"}'
          - key: error-jira-api
            statusCode: 502
            contentType: application/json
            body: '{"success": false, "error": "Jira API Error"}'

    - key: worklog-delete-trigger
      function: worklog-delete
      response:
        type: static
        outputs:
          - key: success-deleted
            statusCode: 200 # Return 200 OK to client even if Jira gives 204
            contentType: application/json
            body: '{"success": true, "action": "deleted"}'
          - key: error-bad-request
            statusCode: 400
            contentType: application/json
            body: '{"success": false, "error": "Bad Request"}'
          - key: error-unauthorized
            statusCode: 401
            contentType: application/json
            body: '{"success": false, "error": "Unauthorized or Re-authentication required"}'
          - key: error-forbidden
            statusCode: 403
            contentType: application/json
            body: '{"success": false, "error": "Forbidden"}'
          - key: error-not-found 
            statusCode: 404
            contentType: application/json
            body: '{"success": false, "error": "Worklog Not Found"}'            
          - key: error-internal
            statusCode: 500
            contentType: application/json
            body: '{"success": false, "error": "Internal Server Error"}'
          - key: error-jira-api 
            statusCode: 502
            contentType: application/json
            body: '{"success": false, "error": "Jira API Error"}'
    # --- End NEW Worklog Web Triggers ---

  jira:globalPage:
    - key: worklog-handler-global-page
      resource: main # Should match the resource key below
      resolver:
        function: handler # Should match the main resolver function key
      title: Worklog Handler
      layout: basic # Default layout

permissions:
  scopes:
    - 'storage:app'
    - 'read:jira-work'
    - 'write:jira-work'
    - 'read:jira-user'
    - 'read:me'
    - 'read:account'
    - 'manage:jira-configuration'
  external:
    fetch:
      backend:
        - api.atlassian.com 
        - auth.atlassian.com

app:
  id: ari:cloud:ecosystem::app/a8de7690-6599-485e-ada7-acceda2fd795
  # REMOVED: name (deprecated)
  runtime:
    name: nodejs22.x

resources:
  - key: main
    path: static/hello-world/build
